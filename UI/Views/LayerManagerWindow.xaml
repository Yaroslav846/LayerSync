<Window x:Class="LayerSync.UI.Views.LayerManagerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:LayerSync.UI.ViewModels"
        mc:Ignorable="d"
        Title="Layer Synchronizer" Height="600" Width="450"
        WindowStartupLocation="CenterScreen"
        MinHeight="400" MinWidth="350">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="SearchBoxStyle" TargetType="TextBox">
            <Setter Property="Padding" Value="5,6"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4"/>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="🔍" VerticalAlignment="Center" Margin="8,0,5,0" Foreground="Gray"/>
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </StackPanel>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListViewItem">
            <Setter Property="Padding" Value="5,8"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#D2E4F9"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E8F1FB"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ToolBar">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="OverflowMode" Value="AsNeeded"/>
        </Style>
        <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#0078D4"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#106EBF"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Padding" Value="8,5"/>
            <Setter Property="Margin" Value="4,0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock Text="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                           Margin="0,0,5,0"
                                           VerticalAlignment="Center"/>
                                <ContentPresenter/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E0E0E0"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <!-- ViewModel is created in code-behind, we only specify the data type here -->
    <Window.DataContext>
        <vm:LayerManagerViewModel/>
    </Window.DataContext>

    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBox Grid.Row="0" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,15" Style="{StaticResource SearchBoxStyle}"/>

        <Border Grid.Row="1" Margin="0,0,0,10"
                BorderThickness="1" BorderBrush="LightGray" CornerRadius="4"
                Background="#F0F0F0"
                Visibility="{Binding IsNewLayerModeActive, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel Orientation="Horizontal" Margin="10">
                <TextBox Text="{Binding NewLayerName, UpdateSourceTrigger=PropertyChanged}" Width="200" Style="{StaticResource SearchBoxStyle}"/>
                <Button Content="Create" Command="{Binding CreateLayerCommand}" Style="{StaticResource PrimaryButton}"/>
                <Button Content="Cancel" Command="{Binding CancelNewLayerCommand}" Style="{StaticResource SecondaryButton}"/>
            </StackPanel>
        </Border>

        <!-- Layer List -->
        <ListView Grid.Row="2"
                  x:Name="LayersListView"
                  ItemsSource="{Binding Layers}"
                  SelectedItem="{Binding SelectedLayer}"
                  SelectionMode="Extended"
                  SelectionChanged="LayersListView_SelectionChanged"
                  AlternationCount="2"
                  BorderThickness="0">
            <ListView.View>
                <GridView>
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="GridViewColumnHeader">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Padding" Value="5,8"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="GridViewColumnHeader">
                                        <Border BorderBrush="LightGray" BorderThickness="0,0,0,1" Background="{TemplateBinding Background}">
                                            <ContentPresenter Margin="{TemplateBinding Padding}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>
                    <GridViewColumn Header="Current" Width="60">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <!-- Using a TextBlock for indication, as IsCurrent is managed by a command -->
                                <TextBlock Text=" ✓" 
                                           Visibility="{Binding IsCurrent, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           HorizontalAlignment="Center" 
                                           FontWeight="Bold"
                                           Foreground="Green"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Name" Width="120">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.InputBindings>
                                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding StartEditCommand}"/>
                                    </Grid.InputBindings>
                                    <TextBlock Text="{Binding Name}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBox x:Name="renameTextBox" Text="{Binding Name, UpdateSourceTrigger=Explicit}">
                                        <TextBox.InputBindings>
                                            <KeyBinding Key="Enter" Command="{Binding CommitRenameCommand}" CommandParameter="{Binding Text, ElementName=renameTextBox}"/>
                                            <KeyBinding Key="Escape" Command="{Binding CancelRenameCommand}"/>
                                        </TextBox.InputBindings>
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Color" Width="50">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Rectangle Width="25" Height="15" 
                                           Fill="{Binding DisplayBrush}" 
                                           Stroke="Gray" 
                                           StrokeThickness="1"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="On" Width="50">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsOn}" HorizontalAlignment="Center" Click="OnCheckBox_Click"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Frozen" Width="80">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsFrozen}" HorizontalAlignment="Center" Click="FrozenCheckBox_Click"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <!-- Button Panel -->
        <ToolBarTray Grid.Row="3" Background="Transparent">
            <ToolBar>
                <Button Content="New" Command="{Binding NewLayerCommand}" Tag="+"/>
                <Button Content="Delete" Command="{Binding DeleteLayersCommand}" Tag="🗑️"/>
                <Separator/>
                <Button Content="Set Current" Command="{Binding SetCurrentCommand}" Tag="✓"/>
                <Button Content="Change Color" Command="{Binding ChangeColorCommand}" Tag="🎨"/>
                <Button Content="Select by Color" Command="{Binding SelectByColorCommand}" Tag="🖌️"/>
                <Separator/>
                <Button Content="Refresh" Command="{Binding RefreshCommand}" Tag="🔄"/>
            </ToolBar>
        </ToolBarTray>
    </Grid>
</Window>

