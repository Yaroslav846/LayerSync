<Window x:Class="LayerSync.UI.Views.LayerManagerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:LayerSync.UI.ViewModels"
        mc:Ignorable="d"
        Title="Layer Synchronizer" Height="600" Width="450"
        WindowStartupLocation="CenterScreen"
        MinHeight="400" MinWidth="350">

    <Window.Resources>
        <!-- Этот ресурс был добавлен для исправления ошибки XamlParseException -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Window.Resources>

    <!-- ViewModel is created in code-behind, we only specify the data type here -->
    <Window.DataContext>
        <vm:LayerManagerViewModel/>
    </Window.DataContext>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBox Grid.Row="0" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10" />

        <!-- Layer List -->
        <ListView Grid.Row="1"
                  x:Name="LayersListView"
                  ItemsSource="{Binding Layers}"
                  SelectedItem="{Binding SelectedLayer}"
                  SelectionMode="Extended"
                  SelectionChanged="LayersListView_SelectionChanged"
                  AlternationCount="2"
                  BorderThickness="1"
                  BorderBrush="LightGray">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Current" Width="60">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <!-- Using a TextBlock for indication, as IsCurrent is managed by a command -->
                                <TextBlock Text=" ✓" 
                                           Visibility="{Binding IsCurrent, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           HorizontalAlignment="Center" 
                                           FontWeight="Bold"
                                           Foreground="Green"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Name" Width="120">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.InputBindings>
                                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding StartEditCommand}"/>
                                    </Grid.InputBindings>
                                    <TextBlock Text="{Binding Name}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBox x:Name="renameTextBox" Text="{Binding Name, UpdateSourceTrigger=Explicit}">
                                        <TextBox.InputBindings>
                                            <KeyBinding Key="Enter" Command="{Binding CommitRenameCommand}" CommandParameter="{Binding Text, ElementName=renameTextBox}"/>
                                            <KeyBinding Key="Escape" Command="{Binding CancelRenameCommand}"/>
                                        </TextBox.InputBindings>
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Color" Width="50">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Rectangle Width="25" Height="15" 
                                           Fill="{Binding DisplayBrush}" 
                                           Stroke="Gray" 
                                           StrokeThickness="1"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="On" Width="50">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsOn, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Frozen" Width="80">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsFrozen, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <!-- Group Action Panel -->
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,10,0,0">
            <Button Content="Turn On" Command="{Binding TurnOnSelectedCommand}" Margin="0,0,5,0"/>
            <Button Content="Turn Off" Command="{Binding TurnOffSelectedCommand}" Margin="0,0,5,0"/>
            <Button Content="Thaw" Command="{Binding ThawSelectedCommand}" Margin="10,0,5,0"/>
            <Button Content="Freeze" Command="{Binding FreezeSelectedCommand}" Margin="0,0,5,0"/>
        </StackPanel>

        <!-- Button Panel -->
        <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
            <Button Content="Set Current" 
                    Command="{Binding SetCurrentCommand}" 
                    Width="120" Margin="5"/>
            <Button Content="Change Color" 
                    Command="{Binding ChangeColorCommand}" 
                    Width="120" Margin="5"/>
            <Button Content="Refresh" 
                    Command="{Binding RefreshCommand}" 
                    Width="80" Margin="5"/>
        </StackPanel>
    </Grid>
</Window>

